openapi: 3.0.1
info:
  title: Todo-Listen-Verwaltung
  description: ""
  contact:
    email: wichmann@bbs-os-brinkstr.de
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1.0
servers:
- url: http://127.0.0.1:5000/
tags:
- name: Listenverwaltung
paths:
  /list:
    post:
      tags:
      - Listenverwaltung
      summary: Add new list
      operationId: addList
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
        required: true
      responses:
        201:
          description: List created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
          headers:
            Location:
              description: The location of the newly created resource
              schema:
                type: string
        400:
          description: Invalid data provided
          content: {}
        500:
          description: List could not be added
          content: {}
  /lists:
    get:
      tags:
      - Listenverwaltung
      summary: Get all lists
      operationId: getAllLists
      responses:
        200:
          description: Lists returned
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/TodoList'
                properties:
                  lists:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                        name:
                          type: string
        500:
          description: Data could not be retrieved
          content: {}

  /list/{list_id}:
    get:
      tags:
      - Listenverwaltung
      summary: Get all items from list
      operationId: getList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List items returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoEntry'
        404:
          description: Invalid list id
          content: {}

    delete:
      tags:
      - Listenverwaltung
      summary: Delete a list
      operationId: deleteList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      responses:
        200:
          description: List was deleted
          content: {}
        404:
          description: Invalid list id
          content: {}
        500:
          description: Could not delete list
          content: {}

    patch:
      tags:
      - Listenverwaltung
      summary: Update an existing list
      operationId: updateList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      requestBody:
        description: list object
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
        required: true
      responses:
        200:
          description: List updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
        404:
          description: List id not found
          content: {}
        500:
          description: Update could not be performed
          content: {}

  /list/{list_id}/item:
    post:
      tags:
      - Listenverwaltung
      summary: Add new item to list
      operationId: addItemToList
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      requestBody:
        description: item object
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
              required:
                - name
        required: true
      responses:
        201:
          description: Item added to list
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  list_id:
                    type: string
                    format: uuid
          headers:
            Location:
              description: The location of the newly created resource
              schema:
                type: string
        400:
          description: Invalid data provided
          content: {}
        404:
          description: List id not found
          content: {}
        500:
          description: Item could not be added
          content: {}

  /list/{list_id}/item/{item_id}:
    patch:
      tags:
      - Listenverwaltung
      summary: Update an existing item
      operationId: updateItem
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      - name: item_id
        in: path
        description: item id
        required: true
        schema:
          type: string
      requestBody:
        description: item object
        content:
          application/json:
            schema:
              type: object
              properties:
                    name:
                      type: string
                    description:
                      type: string
              required:
                - name
        required: true
      responses:
        200:
          description: Item updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  name:
                    type: string
                  description:
                    type: string
                  list_id:
                    type: string
                    format: uuid
        404:
          description: One of the IDs does not exist
          content: {}
        500:
          description: Update could not be performed
          content: {}

    delete:
      tags:
      - Listenverwaltung
      summary: Delete a single item from a todo list
      operationId: deleteItem
      parameters:
      - name: list_id
        in: path
        description: list id
        required: true
        schema:
          type: string
      - name: item_id
        in: path
        description: item id
        required: true
        schema:
          type: string
      responses:
        200:
          description: Item deleted
          content: {}
        404:
          description: One of the IDs does not exist
          content: {}
        500:
          description: Deletion could not be performed
          content: {}

components:
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    TodoEntry:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        user_id:
          type: string
          format: uuid
        list_id:
          type: string
          format: uuid